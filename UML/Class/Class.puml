@startuml
skinparam defaultFontName "OppoSans M"
skinparam linetype polyline
skinparam linetype ortho
skinparam classAttributeIconSize 0
left to right direction
title 活力长者管理系统类和类关系图

class User extends Model{
    {field}
    -id: int
    -name:String
    -realName: String
    -password: String
    -role: int
    -gender: int
    -tel: String
    -birthDay: LocalDate
    {method}
    +User()
    +getId(): int
    +getName(): String
    +getRealName(): String
    +getPassword(): String
    +getRole(): int
    +getGender(): int
    +getTel(): String
    +getBirthDay(): LocalDate

    +setId(id: int): void
    +setName(name: String): void
    +setRealName(realName: String): void
    +setPassword(pwd: String): void
    +setRole(role: int): void
    +setGender(gender: int): void
    +setTel(tel: String): void
    +setBirthDay(birthday: LocalDate): void
}

class Bus extends Model{
    {field}
    - id: int
    - code: String
    - name: String
    - direction: int
    - annual: String  运行周期
    - period: String  运行时段
    - timeBegin: LocalTime
    - timeTerminal: LocalTime
    -int countPeople
    {method}
    +Bus()
    +getId(): int
    +getCode(): String
    +getName(): String
    +getDirection(): int
    +getAnnual(): String
    +getPeriod(): String
    +getTimeBegin(): LocalTime
    +getTimeTerminal(): LocalTime
    +getCountPeople(): int
    +setId(id: int): void
    +setCode(code: String): void
    +setName(name: String): void
    +setDirection(direction: int): void
    +setAnnual(annual: String): void
    +setPeriod(period: String): void
    +setTimeBegin(timeBegin: LocalTime): void
    +setTimeTerminal(timeTerminal: LocalTime): void
    +setCountPeople(countPeople: int): void
}

class Senior extends Model{
    {field}
    -id: int
    -name: String
    -gender: int
    -identity: String
    -birthDay: LocalDate
    -telSelf: String
    -telRelative: String
    -assistantId: int
    {method}
    +Senior();
    +setId(): int
    +getName(): String
    +getGender(): int
    +getIdentify(): String
    +getBirthDay(): LocalDate
    +getTelSelf(): String
    +getTelRelative(): String
    +getAssistantId(): int
    +setId(id: int): void
    +setName(name: String): void
    +setGender(gender: int): void
    +setIdentify(identify: String): void
    +setBirthDay(birthday: LocalDate): void
    +setTelSelf(telSelf: String): void
    +setTelRelative(telRelative: String): void
    +setAssistantId(assistantId: int): void
}

abstract class Model{
    {method}
    getId(): int
}

interface Dao<T extends Model>{
    {method}
    +add(item: T): void
    +remove(id: int): void
    +search(id: int): T
    +modify(id: int,item: T): void
    +getAll(): ObservableList<T>
    +load(): void
    +save(): void
    +size(): int
}

class UserDao implements Dao{
    {field}
    -instance: UserDao
    -daoList: ObservableList<User>
    {method}
    -UserDao()
    +getInstance(): UserDao
}
class SeniorDao implements Dao{
    {field}
    -instance: SeniorDao
    -daoList: ObservableList<Senior>
    {method}
    -SeniorDao()
    +getInstance(): SeniorDao
}
class BusDao implements Dao{
    {field}
    -instance: BusDao
    -daoList: ObservableList<Bus>
    {method}
    -BusDao()
    +getInstance(): BusDao
}

interface Service<T extends Model>{
    {method}
    +add(item: T): void
    +remove(id: int): void
    +search(id: int): T
    +modify(id: int, item: T): void
    +getAll(): List<T>
    +load(): void
    +save(): void
    +size(): int
    +getNewId(): int
}
class UserService implements Service{
    {field}
    -instance: UserService
    -dao: UserDao
    {method}
    searchById(id: int): User
    searchByName(name: String): ObservableList<User>
    searchByRealName(realName: String): ObservableList<User>
    searchByRole(role: int): ObservableList<User>
    searchByTel(tel: String): ObservableList<User>
    searchByGender(gender: int): ObservableList<User>
    remove(id: int): void
    verifyUser(name: String, pwd: String): User
}
class SeniorService implements Service{
    {field}
        -instance: SeniorService
        -dao: SeniorDao
    {method}
        +searchById(id: int): Senior
        +searchByName(name: String): ObservableList<Senior>
        +searchByGender(gender: int): ObservableList<Senior>
        +searchByIdentity(identify: String): ObservableList<Senior>
        +searchByTelSelf(telSelf: String): ObservableList<Senior>
        +searchByTelRelative(telRelative: String): ObservableList<Senior>
        +searchByAssistant(userId: int): ObservableList<Senior>
}
class BusService implements Service{
    {field}
            -instance: BusService
            -dao: BusDao
    {method}
            +searchById(id: int): Bus
            +searchByCode(code: String): ObservableList<Bus>
            +searchByName(name: String): ObservableList<Bus>
            +searchByDirection(direction: int): ObservableList<Bus>
            +searchByAnnual(annual: String): ObservableList<Bus>
            +searchByPeriod(period: String): ObservableList<Bus>
            +searchByTimeBegin(timeBegin: LocalTime): ObservableList<Bus>
            +searchByTimeTerminal(timeTerminal: LocalTime): ObservableList<Bus>
            +searchByCountPeople(countPeople: int): ObservableList<Bus>
            +reserveBus(status: boolean, busId: int): void
            +addPassenger(seniorId: int,busId: int): void
            +removePassenger(seniorId: int,busId: int): void
}

interface Controller implements Initializable{
    {method}
    initialize(url: URL, resourceBundle: ResourceBundle): void
}
class Main implements Controller
class Login implements Controller
class UserManage implements Controller
class SeniorManage implements Controller
class BusManage implements Controller
class UserConfig implements Controller
class ServiceViewAssistant implements Controller
class ServiceViewLogistic implements Controller

class GlobalConfig{
    {field}
    +ROLE: ObservableList<String>
    +GENDER: ObservableList<String>
    +BYS: ObservableList<String>
    +DIRECTION: ObservableList<String>
    +userService: UserService
    +seniorService: SeniorService
    +busService: BusService
    +currentUser: User
    {method}
    +getViewURL(fxmlFileName: String): URL
    +saveData(): void
}
class MainApplication{
    {method}
    +main(args[]: String): void
    +start(stage: Stage):void
}

class FileUtil{
    {method}
    -FileUtil()
    +readFile(fileName: String): String
    +writeFile(fileName: String): void
}
class GsonUtil{
    {field}
    -instance: Gson
    {method}
    -GsonUtil()
    +getInstance()
}

UserDao -> UserService
@enduml